{"version":3,"sources":["../../../.tmp-es/components/expandable-section/index.jsx"],"names":["React","PropTypes","classNames","Button","EXPANDABLE_SECTION","generateId","propTypes","assistiveText","shape","toggleSection","string","children","node","className","oneOfType","array","object","id","isOpen","bool","nonCollapsible","onToggleOpen","func","title","isRequired","defaultProps","ExpandableSection","props","generatedId","event","setState","prevState","state","contentId","getId","undefined","buttonAriaProps","titleNode","icon","toggleOpen","Component","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Expandable Section Component\n\n// Implements the [Expandable Section design pattern](https://www.lightningdesignsystem.com/components/expandable-section/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport Button from '../button';\n\n// ### Event Helpers\n// import KEYS from '../../utilities/key-code';\n// import EventUtil from '../../utilities/event';\n\nimport { EXPANDABLE_SECTION } from '../../utilities/constants';\nimport generateId from '../../utilities/generate-id';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * * `toggleSection`: Label for the icon that expands / collapses the section\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ttoggleSection: PropTypes.string,\n\t}),\n\t/**\n\t * Contents of the section\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * Class names to be added to the `slds-section` classed node\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Unique identifier for the expandable section. The id is automatically generated if not provided\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Specifies whether the section is expanded or collapsed. If not provided, component will use its own state to manage this itself\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * Specifies whether the section can be expanded or collapsed. Defaults to `false`\n\t */\n\tnonCollapsible: PropTypes.bool,\n\t/**\n\t * Callback for when the section is expanded or collapsed. Passes event object and data object with `isOpen` bool.\n\t */\n\tonToggleOpen: PropTypes.func,\n\t/**\n\t * The title for the section\n\t */\n\ttitle: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\ttoggleSection: 'Toggle visibility of section',\n\t},\n\tnonCollapsible: false,\n};\n\n/**\n * Toggle visibility of section content with the Expandable Section\n */\nclass ExpandableSection extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = generateId();\n\t\tthis.state = {\n\t\t\tisOpen: true,\n\t\t};\n\t}\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\ttoggleOpen = (event) => {\n\t\tif (this.props.onToggleOpen) {\n\t\t\tthis.props.onToggleOpen(event, {\n\t\t\t\tisOpen: this.props.isOpen,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tisOpen: !prevState.isOpen,\n\t\t\t}));\n\t\t}\n\t};\n\n\trender() {\n\t\tconst contentId = `${this.getId()}-expanded-section-content`;\n\t\tconst isOpen =\n\t\t\tthis.props.isOpen !== undefined ? this.props.isOpen : this.state.isOpen;\n\t\tconst buttonAriaProps = {\n\t\t\t'aria-controls': contentId,\n\t\t\t'aria-expanded': !!isOpen,\n\t\t};\n\t\tconst titleNode = (\n\t\t\t<span\n\t\t\t\tclassName={classNames('slds-truncate', {\n\t\t\t\t\t'slds-p-horizontal_small': !!this.props.nonCollapsible,\n\t\t\t\t})}\n\t\t\t\ttitle={this.props.title}\n\t\t\t>\n\t\t\t\t{this.props.title}\n\t\t\t</span>\n\t\t);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-section',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-is-open': isOpen,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<h3\n\t\t\t\t\tclassName={classNames('slds-section__title', {\n\t\t\t\t\t\t'slds-theme_shade': !!this.props.nonCollapsible,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{!this.props.nonCollapsible ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\ticon: this.props.assistiveText.toggleSection,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonClassName=\"slds-section__title-action-icon slds-button__icon_left\"\n\t\t\t\t\t\t\ticonName=\"switch\"\n\t\t\t\t\t\t\tonClick={this.toggleOpen}\n\t\t\t\t\t\t\tclassName=\"slds-section__title-action\"\n\t\t\t\t\t\t\tvariant=\"base\"\n\t\t\t\t\t\t\t{...buttonAriaProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{titleNode}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\ttitleNode\n\t\t\t\t\t)}\n\t\t\t\t</h3>\n\t\t\t\t<div\n\t\t\t\t\taria-hidden={!isOpen}\n\t\t\t\t\tclassName=\"slds-section__content\"\n\t\t\t\t\tid={contentId}\n\t\t\t\t>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExpandableSection.displayName = EXPANDABLE_SECTION;\nExpandableSection.propTypes = propTypes;\nExpandableSection.defaultProps = defaultProps;\n\nexport default ExpandableSection;\n"],"file":"index.js"}