{"version":3,"sources":["../../../../.tmp-es/components/vertical-navigation/private/item.jsx"],"names":["React","PropTypes","classNames","isFunction","VERTICAL_NAVIGATION_ITEM","handleClick","event","item","onSelect","url","preventDefault","Item","isSelected","categoryId","id","undefined","icon","cloneElement","className","props","size","label","notificationBadge","displayName","propTypes","shape","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, 'a simple javascript utility for conditionally\n// joining classNames together.'\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\nimport { VERTICAL_NAVIGATION_ITEM } from '../../../utilities/constants';\n\nconst handleClick = (event, { item, onSelect }) => {\n\tif (!item.url) {\n\t\tevent.preventDefault();\n\t}\n\n\tif (isFunction(onSelect)) {\n\t\tonSelect(event, {\n\t\t\titem,\n\t\t});\n\t}\n};\n\nconst Item = ({ isSelected = false, item, categoryId, onSelect }) => (\n\t<li\n\t\tclassName={classNames('slds-nav-vertical__item', {\n\t\t\t'slds-is-active': isSelected,\n\t\t})}\n\t>\n\t\t<a\n\t\t\tdata-id={item.id}\n\t\t\thref={item.url || '#'}\n\t\t\tclassName=\"slds-nav-vertical__action\"\n\t\t\taria-describedby={categoryId}\n\t\t\taria-current={isSelected ? true : undefined}\n\t\t\tonClick={(event) => {\n\t\t\t\thandleClick(event, { item, onSelect });\n\t\t\t}}\n\t\t>\n\t\t\t{item.icon ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{React.cloneElement(item.icon, {\n\t\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\t\titem.icon.className,\n\t\t\t\t\t\t\t`slds-m-right_${item.icon.props.size || 'medium'}`\n\t\t\t\t\t\t),\n\t\t\t\t\t})}\n\t\t\t\t\t{item.label}\n\t\t\t\t</React.Fragment>\n\t\t\t) : (\n\t\t\t\titem.label\n\t\t\t)}\n\t\t\t{item.notificationBadge ? (\n\t\t\t\tReact.cloneElement(item.notificationBadge, {\n\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\titem.notificationBadge.props.className,\n\t\t\t\t\t\t'slds-col_bump-left'\n\t\t\t\t\t),\n\t\t\t\t})\n\t\t\t) : (\n\t\t\t\t<React.Fragment />\n\t\t\t)}\n\t\t</a>\n\t</li>\n);\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nItem.displayName = VERTICAL_NAVIGATION_ITEM;\n\n// ### Prop Types\nItem.propTypes = {\n\t/**\n\t * Item to be rendered.\n\t */\n\titem: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\tlabel: PropTypes.string.isRequired,\n\t\turl: PropTypes.string,\n\t}),\n\t/**\n\t * Whether item is selected or not.\n\t */\n\tisSelected: PropTypes.bool,\n\t/**\n\t * ID of the category this item belongs to.\n\t */\n\tcategoryId: PropTypes.string.isRequired,\n\t/**\n\t * Function that will run whenever an item is selected.\n\t */\n\tonSelect: PropTypes.func,\n};\n\nexport default Item;\n"],"file":"item.js"}