{"version":3,"sources":["../../../.tmp-es/components/global-navigation-bar/link.jsx"],"names":["React","PropTypes","classNames","isFunction","GLOBAL_NAVIGATION_BAR_LINK","GlobalNavigationBarLink","props","active","activeBackgroundColor","assistiveText","activeDescriptor","className","dividerPosition","href","id","label","onBlur","onClick","onFocus","onKeyDown","onKeyPress","onKeyUp","onMouseEnter","onMouseLeave","tabIndex","listItemstyle","backgroundColor","borderBottomColor","handleOnClick","event","preventDefault","displayName","propTypes","bool","string","shape","oneOfType","array","object","oneOf","func"],"mappings":";;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,2BAA3C;AAEA;AACA;AACA;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AAC1C;AACA,MACCC,MADD,GAoBID,KApBJ,CACCC,MADD;AAAA,MAECC,qBAFD,GAoBIF,KApBJ,CAECE,qBAFD;AAAA,6BAoBIF,KApBJ,CAGCG,aAHD;AAAA,MAGCA,aAHD,qCAGiB;AACfC,IAAAA,gBAAgB,EAAE;AADH,GAHjB;AAAA,MAMCC,SAND,GAoBIL,KApBJ,CAMCK,SAND;AAAA,MAOCC,eAPD,GAoBIN,KApBJ,CAOCM,eAPD;AAAA,oBAoBIN,KApBJ,CAQCO,IARD;AAAA,MAQCA,IARD,4BAQQ,GARR;AAAA,MASCC,EATD,GAoBIR,KApBJ,CASCQ,EATD;AAAA,MAUCC,KAVD,GAoBIT,KApBJ,CAUCS,KAVD;AAAA,MAWCC,MAXD,GAoBIV,KApBJ,CAWCU,MAXD;AAAA,MAYCC,OAZD,GAoBIX,KApBJ,CAYCW,OAZD;AAAA,MAaCC,OAbD,GAoBIZ,KApBJ,CAaCY,OAbD;AAAA,MAcCC,SAdD,GAoBIb,KApBJ,CAcCa,SAdD;AAAA,MAeCC,UAfD,GAoBId,KApBJ,CAeCc,UAfD;AAAA,MAgBCC,OAhBD,GAoBIf,KApBJ,CAgBCe,OAhBD;AAAA,MAiBCC,YAjBD,GAoBIhB,KApBJ,CAiBCgB,YAjBD;AAAA,MAkBCC,YAlBD,GAoBIjB,KApBJ,CAkBCiB,YAlBD;AAAA,MAmBCC,QAnBD,GAoBIlB,KApBJ,CAmBCkB,QAnBD;AAsBA,MAAMC,aAAa,GAAGlB,MAAM,GACzB;AACAmB,IAAAA,eAAe,EAAElB,qBADjB;AAEAmB,IAAAA,iBAAiB,EAAEnB;AAFnB,GADyB,GAKzB,IALH;;AAOA,WAASoB,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,QAAI1B,UAAU,CAACc,OAAD,CAAV,IAAuBJ,IAAI,KAAK,GAApC,EAAyC;AACxCgB,MAAAA,KAAK,CAACC,cAAN;AACA;;AAED,QAAI3B,UAAU,CAACc,OAAD,CAAd,EAAyB;AACxBA,MAAAA,OAAO,CAACY,KAAD,EAAQ;AAAEhB,QAAAA,IAAI,EAAJA;AAAF,OAAR,CAAP;AACA;AACD;;AAED,sBACC;AACC,IAAA,SAAS,EAAEX,UAAU,CAAC,wBAAD;AACpB,wBAAkBK;AADE,gDAEeK,eAFf,GAEmCA,eAFnC,EADtB;AAKC,IAAA,EAAE,EAAEE,EALL;AAMC,IAAA,KAAK,EAAEW;AANR,kBAQC;AACC,IAAA,IAAI,EAAEZ,IADP;AAEC,IAAA,SAAS,EAAEX,UAAU,CAAC,gCAAD,EAAmCS,SAAnC,CAFtB;AAGC,IAAA,MAAM,EAAEK,MAHT;AAIC,IAAA,OAAO,EAAEY,aAJV;AAKC,IAAA,OAAO,EAAEV,OALV;AAMC,IAAA,SAAS,EAAEC,SANZ;AAOC,IAAA,UAAU,EAAEC,UAPb;AAQC,IAAA,OAAO,EAAEC,OARV;AASC,IAAA,YAAY,EAAEC,YATf;AAUC,IAAA,YAAY,EAAEC,YAVf;AAWC,IAAA,QAAQ,EAAEC,QAXX;AAYC,IAAA,KAAK,EAAET;AAZR,KAcER,MAAM,gBACN;AAAM,IAAA,SAAS,EAAC;AAAhB,KACEE,aAAa,CAACC,gBADhB,CADM,GAIH,IAlBL,eAmBC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,KAAK,EAAEK;AAAvC,KACEA,KADF,CAnBD,CARD,CADD;AAkCA,CA3ED;;AA6EAV,uBAAuB,CAAC0B,WAAxB,GAAsC3B,0BAAtC,C,CAEA;;AACAC,uBAAuB,CAAC2B,SAAxB,GAAoC;AACnC;AACD;AACA;AACCzB,EAAAA,MAAM,EAAEN,SAAS,CAACgC,IAJiB;;AAKnC;AACD;AACA;AACCzB,EAAAA,qBAAqB,EAAEP,SAAS,CAACiC,MARE;;AASnC;AACD;AACA;AACA;AACCzB,EAAAA,aAAa,EAAER,SAAS,CAACkC,KAAV,CAAgB;AAC9BzB,IAAAA,gBAAgB,EAAET,SAAS,CAACiC;AADE,GAAhB,CAboB;;AAgBnC;AACD;AACA;AACCvB,EAAAA,SAAS,EAAEV,SAAS,CAACmC,SAAV,CAAoB,CAC9BnC,SAAS,CAACoC,KADoB,EAE9BpC,SAAS,CAACqC,MAFoB,EAG9BrC,SAAS,CAACiC,MAHoB,CAApB,CAnBwB;;AAwBnC;AACD;AACA;AACCtB,EAAAA,eAAe,EAAEX,SAAS,CAACsC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CA3BkB;;AA4BnC;AACD;AACA;AACC1B,EAAAA,IAAI,EAAEZ,SAAS,CAACiC,MA/BmB;;AAgCnC;AACD;AACA;AACCpB,EAAAA,EAAE,EAAEb,SAAS,CAACiC,MAnCqB;;AAoCnC;AACD;AACA;AACCnB,EAAAA,KAAK,EAAEd,SAAS,CAACiC,MAvCkB;;AAwCnC;AACD;AACA;AACClB,EAAAA,MAAM,EAAEf,SAAS,CAACuC,IA3CiB;;AA4CnC;AACD;AACA;AACCvB,EAAAA,OAAO,EAAEhB,SAAS,CAACuC,IA/CgB;;AAgDnC;AACD;AACA;AACCtB,EAAAA,OAAO,EAAEjB,SAAS,CAACuC,IAnDgB;;AAoDnC;AACD;AACA;AACCrB,EAAAA,SAAS,EAAElB,SAAS,CAACuC,IAvDc;;AAwDnC;AACD;AACA;AACCpB,EAAAA,UAAU,EAAEnB,SAAS,CAACuC,IA3Da;;AA4DnC;AACD;AACA;AACCnB,EAAAA,OAAO,EAAEpB,SAAS,CAACuC,IA/DgB;;AAgEnC;AACD;AACA;AACClB,EAAAA,YAAY,EAAErB,SAAS,CAACuC,IAnEW;;AAoEnC;AACD;AACA;AACCjB,EAAAA,YAAY,EAAEtB,SAAS,CAACuC,IAvEW;;AAwEnC;AACD;AACA;AACChB,EAAAA,QAAQ,EAAEvB,SAAS,CAACiC;AA3Ee,CAApC;AA8EA,eAAe7B,uBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # GlobalNavigationBar Link Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ## Constants\nimport { GLOBAL_NAVIGATION_BAR_LINK } from '../../utilities/constants';\n\n/**\n * Wraps a link in the proper markup to support use in the GlobalNavigationBar.\n */\nconst GlobalNavigationBarLink = (props) => {\n\t// Separate props we care about in order to pass others along passively to the `a` tag\n\tconst {\n\t\tactive,\n\t\tactiveBackgroundColor,\n\t\tassistiveText = {\n\t\t\tactiveDescriptor: 'Current page:',\n\t\t},\n\t\tclassName,\n\t\tdividerPosition,\n\t\thref = '#',\n\t\tid,\n\t\tlabel,\n\t\tonBlur,\n\t\tonClick,\n\t\tonFocus,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyUp,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\ttabIndex,\n\t} = props;\n\n\tconst listItemstyle = active\n\t\t? {\n\t\t\t\tbackgroundColor: activeBackgroundColor,\n\t\t\t\tborderBottomColor: activeBackgroundColor,\n\t\t  }\n\t\t: null;\n\n\tfunction handleOnClick(event) {\n\t\tif (isFunction(onClick) || href === '#') {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (isFunction(onClick)) {\n\t\t\tonClick(event, { href });\n\t\t}\n\t}\n\n\treturn (\n\t\t<li\n\t\t\tclassName={classNames('slds-context-bar__item', {\n\t\t\t\t'slds-is-active': active,\n\t\t\t\t[`slds-context-bar__item_divider-${dividerPosition}`]: dividerPosition,\n\t\t\t})}\n\t\t\tid={id}\n\t\t\tstyle={listItemstyle}\n\t\t>\n\t\t\t<a\n\t\t\t\thref={href}\n\t\t\t\tclassName={classNames('slds-context-bar__label-action', className)}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tonClick={handleOnClick}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\tonKeyPress={onKeyPress}\n\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\tonMouseEnter={onMouseEnter}\n\t\t\t\tonMouseLeave={onMouseLeave}\n\t\t\t\ttabIndex={tabIndex}\n\t\t\t\ttitle={label}\n\t\t\t>\n\t\t\t\t{active ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t{assistiveText.activeDescriptor}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t\t<span className=\"slds-truncate\" title={label}>\n\t\t\t\t\t{label}\n\t\t\t\t</span>\n\t\t\t</a>\n\t\t</li>\n\t);\n};\n\nGlobalNavigationBarLink.displayName = GLOBAL_NAVIGATION_BAR_LINK;\n\n// ### Prop Types\nGlobalNavigationBarLink.propTypes = {\n\t/**\n\t * Whether the item is active or not.\n\t */\n\tactive: PropTypes.bool,\n\t/**\n\t * Allows alignment of active item with active application background color. If application background is dark, text color may need to be `#fff`. This can be done with the style prop.\n\t */\n\tactiveBackgroundColor: PropTypes.string,\n\t/**\n\t * **Assistive text for accessibility.**\n\t * * `activeDescriptor`: The text that appears alongside a link that is currently active.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tactiveDescriptor: PropTypes.string,\n\t}),\n\t/**\n\t * Class names to be added to the anchor element\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Determines position of separating bar.\n\t */\n\tdividerPosition: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * The `href` attribute of the link. Please pass in bookmarkable URLs from your routing library. Use `GlobalNavigationBarButton` if a \"real URL\" is not desired. If the `onClick` callback is specified this URL will still be prevented from changing the browser's location.\n\t */\n\thref: PropTypes.string,\n\t/**\n\t * The `id` attribute is applied to the `li` tag. _This was recently changed from being on the anchor tag._\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Text to show for link item.\n\t */\n\tlabel: PropTypes.string,\n\t/**\n\t * Triggered when focus is removed.\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * `function (event, href)` - fires when the link is clicked. If set, the browser location change to the `href` specified will be ignored, but the `href` will be included in an additional parameter passed to the callback.\n\t */\n\tonClick: PropTypes.func,\n\t/**\n\t * Triggered when component is focused.\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Triggered when a key is pressed down\n\t */\n\tonKeyDown: PropTypes.func,\n\t/**\n\t * Triggered when a key is pressed and released\n\t */\n\tonKeyPress: PropTypes.func,\n\t/**\n\t * Triggered when a key is released\n\t */\n\tonKeyUp: PropTypes.func,\n\t/**\n\t * Triggered when a mouse arrow hovers\n\t */\n\tonMouseEnter: PropTypes.func,\n\t/**\n\t * Triggered when a mouse arrow no longer hovers\n\t */\n\tonMouseLeave: PropTypes.func,\n\t/**\n\t * Write \"-1\" if you don't want the user to tab to the button.\n\t */\n\ttabIndex: PropTypes.string,\n};\n\nexport default GlobalNavigationBarLink;\n"],"file":"link.js"}