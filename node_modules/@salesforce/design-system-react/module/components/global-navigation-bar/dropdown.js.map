{"version":3,"sources":["../../../.tmp-es/components/global-navigation-bar/dropdown.jsx"],"names":["React","PropTypes","checkProps","componentDoc","MenuDropdown","GlobalNavigationTrigger","GLOBAL_NAVIGATION_BAR_DROPDOWN","GlobalNavigationBarDropdown","align","length","active","activeBackgroundColor","assistiveText","dividerPosition","rest","displayName","propTypes","bool","string","shape","icon","oneOf","className","buttonClassName","oneOfType","array","object","id","offset","onSelect","func","options","isRequired"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Navigation Dropdown Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\n// ### Dropdown\nimport MenuDropdown from '../menu-dropdown';\nimport GlobalNavigationTrigger from './dropdown-trigger';\n\n// ## Constants\nimport { GLOBAL_NAVIGATION_BAR_DROPDOWN } from '../../utilities/constants';\n\n/**\n * This component is an implementation of `MenuDropdown` with a custom trigger. All the properties listed below are provided to the `MenuDropdown` component. Any additional properties are provided to the Custom Trigger (that is the `Button` or `li` tag).\n */\nconst GlobalNavigationBarDropdown = ({\n\talign = 'right',\n\tlength = null,\n\tactive,\n\tactiveBackgroundColor,\n\tassistiveText,\n\tdividerPosition,\n\t...rest\n}) => {\n\tcheckProps(\n\t\tGLOBAL_NAVIGATION_BAR_DROPDOWN,\n\t\t{\n\t\t\talign,\n\t\t\tlength,\n\t\t\tactive,\n\t\t\tactiveBackgroundColor,\n\t\t\tassistiveText,\n\t\t\tdividerPosition,\n\t\t\t...rest,\n\t\t},\n\t\tcomponentDoc\n\t);\n\n\treturn (\n\t\t<MenuDropdown\n\t\t\talign=\"right\"\n\t\t\thasStaticAlignment\n\t\t\t// only need if using hybrid or hover\n\t\t\thoverCloseDelay={400}\n\t\t\tlength={length}\n\t\t\tmenuPosition=\"relative\"\n\t\t\t{...rest}\n\t\t>\n\t\t\t<GlobalNavigationTrigger\n\t\t\t\tactive={active}\n\t\t\t\tassistiveText={assistiveText}\n\t\t\t\tactiveBackgroundColor={activeBackgroundColor}\n\t\t\t\tdividerPosition={dividerPosition}\n\t\t\t/>\n\t\t</MenuDropdown>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name (set in the core) as the React\n// display name.\nGlobalNavigationBarDropdown.displayName = GLOBAL_NAVIGATION_BAR_DROPDOWN;\n\n// ### Prop Types\nGlobalNavigationBarDropdown.propTypes = {\n\t/**\n\t * Whether the item is active or not.\n\t */\n\tactive: PropTypes.bool,\n\t/**\n\t * Allows alignment of active item with active application background color.\n\t */\n\tactiveBackgroundColor: PropTypes.string,\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `icon`: Text that is visually hidden but read aloud by screenreaders to tell the user what the icon means. If the button has an icon and a visible label, you can omit the <code>assistiveText.icon</code> prop and use the <code>label</code> prop.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ticon: PropTypes.string,\n\t}),\n\t/**\n\t * Aligns the right or left side of the menu with the respective side of the trigger. This is not intended for use with `nubbinPosition`.\n\t */\n\talign: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * Extra classnames to apply to the dropdown menu.\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * Determines position of separating bar.\n\t */\n\tdividerPosition: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * CSS classes to be added to `li` element.\n\t */\n\tbuttonClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Provided to List to indicate number of items visible in the List. Pass `null` to display all items, or a string containing one of the numeric option values listed under [Dropdown Height](https://www.lightningdesignsystem.com/components/menus/#flavor-dropdown-height) at the right (eg. '5').\n\t */\n\tlength: PropTypes.oneOf([null, '5', '7', '10']),\n\t/**\n\t *  Offset adds pixels to the absolutely positioned dropdown menu in the format: ([vertical]px [horizontal]px).\n\t */\n\toffset: PropTypes.string,\n\t/**\n\t * Triggered when an item in the menu is clicked.\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * An array of menu item.\n\t */\n\toptions: PropTypes.array.isRequired,\n};\n\nexport default GlobalNavigationBarDropdown;\n"],"file":"dropdown.js"}