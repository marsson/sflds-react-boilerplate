{"version":3,"sources":["../../../.tmp-es/components/accordion/index.jsx"],"names":["React","Component","PropTypes","classNames","ACCORDION","generateId","propTypes","className","oneOfType","array","object","string","id","number","children","node","isRequired","Accordion","props","state","currButtonIndex","summaryButtons","generatedId","prevProps","prevState","focus","setState","e","buttonIndex","findIndex","el","target","key","preventDefault","length","button","btnInArr","find","undefined","push","Children","map","child","cloneElement","refs","summaryButton","addSummaryButton","bind","onClickSummary","onKeyDownSummary","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Accordion design\n// pattern](https://www.lightningdesignsystem.com/components/accordion/) in\n// React. Based on SLDS v2.4.3\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { ACCORDION } from '../../utilities/constants';\nimport generateId from '../../utilities/generate-id';\n\nconst propTypes = {\n\t/**\n\t * CSS class names to be added to the accordion component. _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for accordion component. _Tested with snapshot testing._\n\t */\n\tid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t/**\n\t * The panel content for the Accordion component. Accordion panels should be added as <AccordionPanel />. Event handler for the accordion panels should be added to `<AccordionPanel />`. Optional `panelContentActions` component may be passed as prop. _Tested with Mocha framework and snapshot testing._\n\t *\n\t * Example:\n\t * ```\n\t * <SLDSAccordion>\n\t *   <SLDSAccordionpanel />\n\t *   <SLDSAccordionpanel />\n\t *   <SLDSAccordionpanel />\n\t * </SLDSAccordion>\n\t * ```\n\t */\n\tchildren: PropTypes.node.isRequired,\n};\n\n/**\n * An accordion allows a user to toggle the display of sections of content.\n * The accordion component wraps accordion panels that can be selected and expanded. It accepts children to define the content displayed within.\n */\nclass Accordion extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { currButtonIndex: 0 };\n\t\tthis.summaryButtons = [];\n\t\tthis.generatedId = generateId();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (\n\t\t\tthis.state.currButtonIndex !== null &&\n\t\t\tthis.state.currButtonIndex !== prevState.currButtonIndex\n\t\t) {\n\t\t\tthis.summaryButtons[this.state.currButtonIndex].focus();\n\t\t}\n\t}\n\n\tonClickSummary() {\n\t\tthis.setState({ currButtonIndex: null });\n\t}\n\n\tonKeyDownSummary(e) {\n\t\tlet buttonIndex = this.state.currButtonIndex;\n\t\tif (buttonIndex === null) {\n\t\t\tbuttonIndex = this.summaryButtons.findIndex(\n\t\t\t\t(el) => el.id === e.target.id\n\t\t\t);\n\t\t}\n\n\t\tif (e.key === 'ArrowDown') {\n\t\t\te.preventDefault();\n\t\t\tif (buttonIndex < this.props.children.length - 1) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrButtonIndex: buttonIndex + 1,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ currButtonIndex: 0 });\n\t\t\t}\n\t\t} else if (e.key === 'ArrowUp') {\n\t\t\te.preventDefault();\n\t\t\tif (buttonIndex > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrButtonIndex: buttonIndex - 1,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ currButtonIndex: this.props.children.length - 1 });\n\t\t\t}\n\t\t}\n\t}\n\n\taddSummaryButton(button) {\n\t\tconst btnInArr = this.summaryButtons.find((el) => button === el);\n\t\tif (button !== null && btnInArr === undefined) {\n\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\tthis.summaryButtons.push(button);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ul\n\t\t\t\tname={this.props.id || this.generatedId}\n\t\t\t\tclassName={classNames('slds-accordion', this.props.className)}\n\t\t\t>\n\t\t\t\t{React.Children.map(this.props.children, (child) =>\n\t\t\t\t\tReact.cloneElement(child, {\n\t\t\t\t\t\trefs: { summaryButton: this.addSummaryButton.bind(this) },\n\t\t\t\t\t\tonClickSummary: this.onClickSummary.bind(this),\n\t\t\t\t\t\tonKeyDownSummary: this.onKeyDownSummary.bind(this),\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nAccordion.displayName = ACCORDION;\nAccordion.propTypes = propTypes;\n\nexport default Accordion;\n"],"file":"index.js"}