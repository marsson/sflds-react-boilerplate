{"version":3,"sources":["../../../../.tmp-es/components/forms/private/label.jsx"],"names":["React","PropTypes","classNames","propTypes","assistiveText","object","htmlFor","string","label","oneOfType","node","required","bool","variant","oneOf","Label","labelText","subRenders","base","static","displayName"],"mappings":"AAAA;;AACA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,SAAS,GAAG;AACjB;AACD;AACA;AACCC,EAAAA,aAAa,EAAEH,SAAS,CAACI,MAJR;;AAKjB;AACD;AACA;AACCC,EAAAA,OAAO,EAAEL,SAAS,CAACM,MARF;;AASjB;AACD;AACA;AACCC,EAAAA,KAAK,EAAEP,SAAS,CAACQ,SAAV,CAAoB,CAACR,SAAS,CAACS,IAAX,EAAiBT,SAAS,CAACM,MAA3B,CAApB,CAZU;;AAajB;AACD;AACA;AACCI,EAAAA,QAAQ,EAAEV,SAAS,CAACW,IAhBH;;AAiBjB;AACD;AACA;AACCC,EAAAA,OAAO,EAAEZ,SAAS,CAACa,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB;AApBQ,CAAlB;AAuBA;AACA;AACA;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAMR;AAAA,MALLP,KAKK,QALLA,KAKK;AAAA,MAJLJ,aAIK,QAJLA,aAIK;AAAA,MAHLE,OAGK,QAHLA,OAGK;AAAA,MAFLK,QAEK,QAFLA,QAEK;AAAA,0BADLE,OACK;AAAA,MADLA,OACK,6BADK,MACL;AACL,MAAMG,SAAS,GAAGR,KAAK,IAAKJ,aAAa,IAAIA,aAAa,CAACI,KAA3D,CADK,CAC8D;;AAEnE,MAAMS,UAAU,GAAG;AAClBC,IAAAA,IAAI,eACH;AACC,MAAA,SAAS,EAAEhB,UAAU,CAAC,0BAAD,EAA6B;AACjD,+BAAuBE,aAAa,IAAI,CAACI;AADQ,OAA7B,CADtB;AAIC,MAAA,OAAO,EAAEF;AAJV,OAMEK,QAAQ,iBACR;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAC;AAAtC,OACE,GADF,CAPF,EAWEK,SAXF,CAFiB;AAgBlBG,IAAAA,MAAM,eAAE;AAAM,MAAA,SAAS,EAAC;AAAhB,OAA4CH,SAA5C;AAhBU,GAAnB;AAmBA,SAAOA,SAAS,GAAGC,UAAU,CAACJ,OAAD,CAAb,GAAyB,IAAzC;AACA,CA7BD;;AA+BAE,KAAK,CAACK,WAAN,GAAoB,OAApB;AACAL,KAAK,CAACZ,SAAN,GAAkBA,SAAlB;AAEA,eAAeY,KAAf","sourcesContent":["/* eslint-disable react/jsx-curly-brace-presence */\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst propTypes = {\n\t/*\n\t * Assistive Text to use instead of a visible label\n\t */\n\tassistiveText: PropTypes.object,\n\t/*\n\t * Id of the input associated with this label\n\t */\n\thtmlFor: PropTypes.string,\n\t/*\n\t * Input Label or inner node for formatting purposes\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n\t/*\n\t * Applies label styling for a required form element\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * Changes markup of label.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'static']),\n};\n\n/*\n * Form label. This returns null if there is no label text (hidden or shown)\n */\nconst Label = ({\n\tlabel,\n\tassistiveText,\n\thtmlFor,\n\trequired,\n\tvariant = 'base',\n}) => {\n\tconst labelText = label || (assistiveText && assistiveText.label); // One of these is required to pass accessibility tests\n\n\tconst subRenders = {\n\t\tbase: (\n\t\t\t<label\n\t\t\t\tclassName={classNames('slds-form-element__label', {\n\t\t\t\t\t'slds-assistive-text': assistiveText && !label,\n\t\t\t\t})}\n\t\t\t\thtmlFor={htmlFor}\n\t\t\t>\n\t\t\t\t{required && (\n\t\t\t\t\t<abbr className=\"slds-required\" title=\"required\">\n\t\t\t\t\t\t{'*'}\n\t\t\t\t\t</abbr>\n\t\t\t\t)}\n\t\t\t\t{labelText}\n\t\t\t</label>\n\t\t),\n\t\tstatic: <span className=\"slds-form-element__label\">{labelText}</span>,\n\t};\n\n\treturn labelText ? subRenders[variant] : null;\n};\n\nLabel.displayName = 'Label';\nLabel.propTypes = propTypes;\n\nexport default Label;\n"],"file":"label.js"}