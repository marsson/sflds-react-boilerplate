/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */

/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */
// # FileFigure Component
// Implements the [FileFigure design pattern](https://www.lightningdesignsystem.com/components/files/) in React.
import React from 'react';
import PropTypes from 'prop-types';
import { FILES_FIGURE } from '../../../utilities/constants';
import Spinner from '../../spinner';
/**
 * A file can have a image, an icon or a loading animation as its thumbnail
 */

var FileFigure = function FileFigure(_ref) {
  var _ref$isLoading = _ref.isLoading,
      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,
      assistiveText = _ref.assistiveText,
      image = _ref.image,
      labels = _ref.labels,
      icon = _ref.icon;

  if (isLoading) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
      className: "slds-assistive-text"
    }, assistiveText.link), /*#__PURE__*/React.createElement(Spinner, {
      size: "medium",
      variant: "base",
      assistiveText: {
        label: assistiveText.loading
      },
      containerStyle: {
        zIndex: '1'
      }
    }));
  }

  if (image) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
      className: "slds-assistive-text"
    }, assistiveText.link), /*#__PURE__*/React.createElement("img", {
      alt: assistiveText.image || labels.title,
      src: image
    }));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
    className: "slds-assistive-text"
  }, assistiveText.link), /*#__PURE__*/React.createElement("span", {
    className: "slds-file__icon slds-icon_container",
    title: labels.title
  }, /*#__PURE__*/React.cloneElement(icon, {
    size: null
  })));
};

FileFigure.displayName = FILES_FIGURE;
FileFigure.propTypes = {
  assistiveText: PropTypes.shape({
    image: PropTypes.string
  }),

  /**
   *  Whether the file figure is loading
   */
  isLoading: PropTypes.bool,

  /**
   *  Image/Figure for the file
   */
  image: PropTypes.string,

  /**
   *  Labels for the file figure component
   */
  labels: PropTypes.shape({
    title: PropTypes.string.isRequired
  })
};
export default FileFigure;
//# sourceMappingURL=file-figure.js.map