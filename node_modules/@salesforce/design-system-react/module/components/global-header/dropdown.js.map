{"version":3,"sources":["../../../.tmp-es/components/global-header/dropdown.jsx"],"names":["React","PropTypes","MenuDropdown","GlobalHeaderTrigger","checkProps","GLOBAL_HEADER_DROPDOWN","GLOBAL_HEADER_TOOL","GlobalHeaderDropdown","align","buttonVariant","iconVariant","nubbinPosition","globalAction","rest","iconVariantOverride","displayName","propTypes","oneOf","className","string","buttonClassName","oneOfType","array","object","iconName","id","bool","offset","onSelect","func","options","isRequired"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Header Dropdown Component\n// NOTE: THIS COMPONENT HAS BEEN DEPRECATED AND WILL BE REMOVED IN FUTURE MAJOR RELEASES\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### Dropdown\nimport MenuDropdown from '../menu-dropdown';\nimport GlobalHeaderTrigger from './private/dropdown-trigger';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ## Constants\nimport {\n\tGLOBAL_HEADER_DROPDOWN,\n\tGLOBAL_HEADER_TOOL,\n} from '../../utilities/constants';\n\n/**\n * This component is an implementation of `MenuDropdown` with a custom trigger. All the properties listed below are provided to the `MenuDropdown` component. Any additional properties are provided to the Custom Trigger (that is the `Button` or `li` tag).\n */\nconst GlobalHeaderDropdown = ({\n\talign = 'right',\n\tbuttonVariant = 'icon',\n\ticonVariant = 'global-header',\n\tnubbinPosition = 'top right',\n\tglobalAction,\n\t...rest\n}) => {\n\tcheckProps(GLOBAL_HEADER_DROPDOWN, {\n\t\talign,\n\t\tbuttonVariant,\n\t\ticonVariant,\n\t\tnubbinPosition,\n\t\tglobalAction,\n\t\t...rest,\n\t});\n\n\tlet iconVariantOverride;\n\n\tif (globalAction) {\n\t\ticonVariantOverride = 'container';\n\t}\n\n\treturn (\n\t\t<MenuDropdown\n\t\t\tnubbinPosition=\"top right\"\n\t\t\tbuttonVariant={buttonVariant}\n\t\t\talign={align}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<GlobalHeaderTrigger\n\t\t\t\tglobalAction={globalAction}\n\t\t\t\ticonSize={globalAction && 'small'}\n\t\t\t\ticonVariant={iconVariantOverride || iconVariant}\n\t\t\t/>\n\t\t</MenuDropdown>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name (set in the core) as the React\n// display name.\nGlobalHeaderDropdown.displayName = GLOBAL_HEADER_TOOL;\n\n// ### Prop Types\nGlobalHeaderDropdown.propTypes = {\n\t/**\n\t * Aligns the right or left side of the menu with the respective side of the trigger. This is not intended for use with `nubbinPosition`.\n\t */\n\talign: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * Extra classnames to apply to the dropdown menu.\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * CSS classes to be added to `li` element.\n\t */\n\tbuttonClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n\t */\n\ticonName: PropTypes.string,\n\t/**\n\t * For icon variants, please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#icon\">Lightning Design System Icons</a>.\n\t */\n\ticonVariant: PropTypes.oneOf([\n\t\t'bare',\n\t\t'container',\n\t\t'border',\n\t\t'border-filled',\n\t\t'more',\n\t\t'global-header',\n\t]),\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Adds custom styling such as inverse fill and special sizing/spacing\n\t */\n\tglobalAction: PropTypes.bool,\n\t/**\n\t * Positions dropdown menu with a nubbin--that is the arrow notch. The placement options correspond to the placement of the nubbin. This is implemeted with CSS classes and is best used with a `Button` with \"icon container\" styling. Dropdown menus will still be contained to the closest scrolling parent.\n\t */\n\tnubbinPosition: PropTypes.oneOf([\n\t\t'top left',\n\t\t'top',\n\t\t'top right',\n\t\t'bottom left',\n\t\t'bottom',\n\t\t'bottom right',\n\t]),\n\t/**\n\t *  Offset adds pixels to the absolutely positioned dropdown menu in the format: ([vertical]px [horizontal]px).\n\t */\n\toffset: PropTypes.string,\n\t/**\n\t * Triggered when an item in the menu is clicked.\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * An array of menu item.\n\t */\n\toptions: PropTypes.array.isRequired,\n};\n\nexport default GlobalHeaderDropdown;\n"],"file":"dropdown.js"}