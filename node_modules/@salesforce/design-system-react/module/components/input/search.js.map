{"version":3,"sources":["../../../.tmp-es/components/input/search.jsx"],"names":["React","PropTypes","Input","InputIcon","checkProps","componentDoc","KEYS","EventUtil","SEARCH","handleKeyDown","event","onSearch","keyCode","ENTER","trapImmediate","defaultProps","assistiveText","Search","clearable","onClear","placeholder","props","mergedAssistiveText","label","icon","displayName","propTypes","shape","string","bool","func"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Search Component\n\n// Wraps the input to default to a search style.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ## Children\nimport Input from './index';\nimport InputIcon from '../icon/input-icon';\n\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\n// ### Event Helpers\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\n\n// ## Constants\nimport { SEARCH } from '../../utilities/constants';\n\nconst handleKeyDown = (event, onSearch) => {\n\tif (event.keyCode === KEYS.ENTER) {\n\t\tEventUtil.trapImmediate(event);\n\t\tonSearch(event);\n\t}\n};\n\nconst defaultProps = {\n\tassistiveText: {},\n};\n\n/**\n * A `Search` is an `Input` which renders the search icon by default. It can be cleared, too. All `Input` props not specified as props already may be used with this component and will override defaults.\n */\nconst Search = ({\n\tclearable,\n\tonClear,\n\tonSearch,\n\tplaceholder,\n\tassistiveText = defaultProps.assistiveText,\n\t...props\n}) => {\n\tcheckProps(\n\t\tSEARCH,\n\t\t{ clearable, onClear, onSearch, placeholder, assistiveText, ...props },\n\t\tcomponentDoc\n\t);\n\tconst mergedAssistiveText =\n\t\ttypeof assistiveText === 'string'\n\t\t\t? assistiveText\n\t\t\t: {\n\t\t\t\t\t...defaultProps.assistiveText,\n\t\t\t\t\t...assistiveText,\n\t\t\t  }.label;\n\treturn (\n\t\t<Input\n\t\t\tassistiveText={{ label: mergedAssistiveText }}\n\t\t\ticonLeft={\n\t\t\t\t<InputIcon\n\t\t\t\t\tassistiveText={{ icon: 'Search' }}\n\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\tname=\"search\"\n\t\t\t\t\tonClick={onSearch}\n\t\t\t\t/>\n\t\t\t}\n\t\t\ticonRight={\n\t\t\t\tclearable ? (\n\t\t\t\t\t<InputIcon\n\t\t\t\t\t\tassistiveText={{ icon: 'Clear' }}\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tname=\"clear\"\n\t\t\t\t\t\tonClick={onClear}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t}\n\t\t\tonKeyDown={onSearch ? (event) => handleKeyDown(event, onSearch) : null}\n\t\t\tplaceholder={placeholder}\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n\nSearch.displayName = SEARCH;\n\nSearch.propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: Assistive text to search input\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Adds a clear button to right side of the input\n\t */\n\tclearable: PropTypes.bool,\n\t/**\n\t * Triggers when the clear button is clicked\n\t */\n\tonClear: PropTypes.func,\n\t/**\n\t * This event fires when enter is pressed in the `input` or the search button is clicked.\n\t */\n\tonSearch: PropTypes.func,\n\t/**\n\t * Placeholder for the input\n\t */\n\tplaceholder: PropTypes.string,\n};\n\nexport default Search;\n"],"file":"search.js"}